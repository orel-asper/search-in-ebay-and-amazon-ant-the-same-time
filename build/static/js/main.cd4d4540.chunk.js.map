{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","heroContent","padding","spacing","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","progress","marginLeft","justifyContent","App","useState","amazone","setAmazon","ebay","setEbay","search","setSearch","setProgress","getProducts","a","length","axios","get","res","data","status","amazon","classes","Fragment","CssBaseline","AppBar","position","Toolbar","Typography","variant","color","noWrap","className","Container","maxWidth","TextField","fullWidth","value","id","label","placeholder","onChange","e","target","required","Button","type","size","style","onClick","component","align","gutterBottom","Grid","container","map","p","item","xs","sm","md","Card","CardMedia","cd","image","img","title","name","CardContent","price","CardActions","Link","href","url","uuidv4","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd4d4540.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\n\nconst App = () => {\n  const [amazone, setAmazon] = useState([])\n  const [ebay, setEbay] = useState([])\n  const [search, setSearch] = useState('')\n  const [progress, setProgress] = useState(false)\n\n\n  const getProducts = async () => {\n    if (search.length > 0) {\n      let res = await axios.get(`/${search}`,)\n      let { data } = res\n      if (res.status === 200) {\n        setAmazon(data.amazon)\n        setEbay(data.ebay)\n      }\n    }\n  };\n\n\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Give me ebay and Amazon\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <TextField fullWidth value={search} id=\"search\" label=\"Search for items...\" variant=\"outlined\" placeholder=\"Search\"\n              onChange={e => setSearch(e.target.value)} required />\n            <Button fullWidth type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" style={{ marginTop: 10 }} onClick={() => {\n              setAmazon([])\n              setEbay([])\n              setSearch('')\n              getProducts()\n              setProgress(search.length > 0 ? true : false)\n            }}>Search</Button>\n          </Container>\n        </div>\n        {!amazone.length && !ebay.length && progress ? (\n          <div className={classes.progress}>\n            <CircularProgress />\n          </div>\n\n        ) : (\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Amazon\n               </Typography>\n              <Grid container spacing={4}>\n                {amazone.length > 1 ? amazone.map((p) => (\n                  <Grid item key={uuidv4()} xs={12} sm={6} md={4}>\n                    <Card className={classes.card}>\n                      <CardMedia\n              cd           className={classes.cardMedia}\n                        image={p.img}\n                        title={p.name}\n                      />\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {p.price}\n                        </Typography>\n                        <Typography>\n                          {p.name}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Link href={p.url} target=\"_blank\" >\n                          Link\n                     </Link>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                )) : null}\n              </Grid>\n              <hr />\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Ebay\n               </Typography>\n              <Grid container spacing={4}>\n                {ebay.length > 1 ? ebay.map((p) => (\n                  <Grid item key={uuidv4()} xs={12} sm={6} md={4}>\n                    <Card className={classes.card}>\n                      <CardMedia\n                        className={classes.cardMedia}\n                        image={p.img}\n                        title={p.name}\n                      />\n                      <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {p.price}\n                        </Typography>\n                        <Typography>\n                          {p.name}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Link href={p.url} >\n                          Link\n                     </Link>\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                )) : null}\n              </Grid>\n            </Container>\n          )}\n      </main>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  progress: {\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n}));\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}